# Actions 작업명
name: Upload To Amazon S3 Quarkus Build File

# 이벤트 바인딩 : master 브랜치에 push 이벤트 발생 시 실행
on:
  push:
    branches: [ main ]

jobs:
  backend:
    name: CI with Gradle
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash
        working-directory: ./

    # https://github.com/actions/setup-java 여기 참조하믄 됨.
    steps:
      - name: 체크아웃 Github-Action
        uses: actions/checkout@v2
      - name: 자바 Adopt JDK 17 설치
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'

      - name: 도대체 어느디렉토리에 있니
        run: |
          ls -al
          pwd
          cd /home
          ls -al
          cd /home/runner/work/Java-EC2-CICD-Prototype/Java-EC2-CICD-Prototype/
          ls -al
        # sudo find / -type f -name "gradlew" 정 못찾겠으면 이걸로 해서라도 gradlew 가 어디있는지 찾을 수 있다.

      - name: gradlew 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle 빌드
        run: ./gradlew build

      # 빌드 결과물과 appspec.yml을 여기에 담을꺼다
      - name: 작업 디렉토리 생성
        run: mkdir ./artifacts/

      # appspec.yml 포함해서 압축 / quarkus는 종속성이 있어서 /build/quarkus-app 디렉토리를 통으로 압축한다.
      - name: 생성한 디렉토리에 작업 결과물을 build.zip 파일로 작성
        run: zip -r ./artifacts/build.zip ./build/quarkus-app/* appspec.yml

      # AWS S3에 빌드 파일 보내즈앗
      - name: deploy to s3
        uses: jakejarvis/s3-sync-action@master

        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{secrets.AWS_PRODUCTION_BUCKET_NAME}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_MANAGER_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_MANAGER_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-1
          # 깃허브에서 보낼 디렉토리
          SOURCE_DIR: './artifacts'
          # AWS S3의 목적지 디렉토리. S3에 존재해야함(미리 AWS쪽에서 만들어둔다)
          DEST_DIR: 'backend/'